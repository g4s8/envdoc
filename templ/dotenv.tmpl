{{- define "item" }}
  {{- $comma := false -}}
# {{ .Doc }}
  {{- if .EnvName -}}
    {{ if eq .EnvSeparator "," }}
      {{- $comma = true -}}
# (comma-separated
    {{ else if ne .EnvSeparator "" }}
      {{- $comma = true -}}
# (separated by `{{.EnvSeparator}}`
    {{ end -}}
    {{- if .Required -}}
      {{- if $comma -}}, {{- else -}}
# (
{{- end -}}
      {{- $comma = true -}}
      required
    {{- end -}}
    {{- if .Expand -}}
      {{- if $comma }}, {{ else }}# ({{ end -}}
      {{- $comma = true -}}
      expand
    {{- end -}}
    {{- if .NonEmpty -}}
      {{- if $comma }}, {{ else }}# ({{ end -}}
      {{- $comma = true -}}
      non-empty
    {{- end -}}
    {{if .FromFile -}}
      {{- if $comma }}, {{ else }}# ({{ end -}}
      {{- $comma = true -}}
      from-file
    {{- end -}}
    {{- if ne .EnvDefault "" -}}
      {{- if $comma }}, {{ else }}# ({{ end -}}
      {{- $comma = true -}}
      {{- .EnvDefault | printf "default: `%s`" -}}
    {{- end -}}
    {{- if $comma }}){{ end -}}
  {{- end }}
  {{- $children := .Children 2 }}
  {{- if $children }}
    {{- range $children }}
{{ template "item" . }}
    {{- end }}
  {{- end -}}

    Save me: {{- .EnvName | printf "* `%s`" -}}
{{ end -}}

{{ .Title }}
{{ range .Sections }}
## {{ .Name }}
{{ if ne .Doc "" }}
# {{ .Doc }}
{{ end }}
{{ range .Items }}
{{- template "item" . }}
{{ end -}}
{{ end -}}
