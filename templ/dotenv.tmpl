{{- define "item" }}
  {{- $comma := false -}}
  {{- if .EnvName -}}
    {{ prefixLines .Doc "# " -}}
    {{- if eq .EnvSeparator "," -}}
      {{ $comma = true }} (comma-separated
    {{- else if ne .EnvSeparator "" -}}
      {{ $comma = true }} (separated by '{{.EnvSeparator}}'
    {{- end -}}
    {{- if .Required -}}
      {{- if $comma }}, {{ else }} ({{ end -}}
      {{- $comma = true -}}
      required
    {{- end -}}
    {{- if .Expand -}}
      {{- if $comma }}, {{ else }} ({{ end -}}
      {{- $comma = true -}}
      expand
    {{- end -}}
    {{- if .NonEmpty -}}
      {{- if $comma }}, {{ else }} ({{ end -}}
      {{- $comma = true -}}
      non-empty
    {{- end -}}
    {{if .FromFile -}}
      {{- if $comma }}, {{ else }} ({{ end -}}
      {{- $comma = true -}}
      from-file
    {{- end -}}
    {{- if ne .EnvDefault "" -}}
      {{- if $comma }}, {{ else }} ({{ end -}}
      {{- $comma = true -}}
      {{- .EnvDefault | printf "default: %s" -}}
    {{- end -}}
    {{- if $comma }}){{ end -}}
  {{ else -}}
    {{ prefixLines .Doc "## " }}
  {{- end }}
  {{ if ne .EnvDefault "" -}}
    {{- printf "# %s=%s" .EnvName .EnvDefault -}}
  {{- else -}}
    {{- printf `# %s=""` .EnvName -}}
  {{- end }}
  {{- $children := .Children 2 }}
  {{- if $children }}
    {{- range $children }}
{{ template "item" . }}
    {{- end }}
  {{- end -}}
{{ end -}}

# {{ .Title }}
{{ range .Sections -}}
{{ if ne .Name "" }}
## {{ .Name }}
{{ end }}
{{- if ne .Doc "" }}
{{ prefixLines .Doc "## " -}}
{{ end }}
{{ range .Items }}
{{- template "item" . -}}
{{ end -}}
{{ end -}}
