Struct fields with env-prefix

-- src.go --
package main

// Settings is the application settings.
type Settings struct {
	// Database is the database settings
	Database Database `envPrefix:"DB_"`

	// Server is the server settings
	Server ServerConfig `envPrefix:"SERVER_"`

	// Debug is the debug flag
	Debug bool `env:"DEBUG"`
}

// Database is the database settings.
type Database struct {
	// Port is the port to connect to
	Port Int `env:"PORT,required"`
	// Host is the host to connect to
	Host string `env:"HOST,notEmpty" envDefault:"localhost"`
	// User is the user to connect as
	User string `env:"USER"`
	// Password is the password to use
	Password string `env:"PASSWORD"`
	// DisableTLS is the flag to disable TLS
	DisableTLS bool `env:"DISABLE_TLS"`
}

// ServerConfig is the server settings.
type ServerConfig struct {
	// Port is the port to listen on
	Port Int `env:"PORT,required"`

	// Host is the host to listen on
	Host string `env:"HOST,notEmpty" envDefault:"localhost"`

	// Timeout is the timeout settings
	Timeout TimeoutConfig `envPrefix:"TIMEOUT_"`
}

// TimeoutConfig is the timeout settings.
type TimeoutConfig struct {
	// Read is the read timeout
	Read Int `env:"READ" envDefault:"30"`
	// Write is the write timeout
	Write Int `env:"WRITE" envDefault:"30"`
}

-- testcase.yaml --

testcase:
  src_file: src.go
  file_glob: "*.go"
  type_glob: Settings
  files:
  - name: src.go
    pkg: main
    export: true
    types:
    - name: Settings
      export: true
      doc: Settings is the application settings.
      fields:
      - names: [Database]
        doc: Database is the database settings
        tag: envPrefix:"DB_"
        type_ref: {name: Database, kind: Ident}
      - names: [Server]
        doc: Server is the server settings
        tag: envPrefix:"SERVER_"
        type_ref: {name: ServerConfig, kind: Ident}
      - names: [Debug]
        doc: Debug is the debug flag
        tag: env:"DEBUG"
        type_ref: {name: bool, kind: Ident}
    - name: Database
      export: false
      doc: Database is the database settings.
      fields:
      - names: [Port]
        doc: Port is the port to connect to
        tag: env:"PORT,required"
        type_ref: {name: Int, kind: Ident}
      - names: [Host]
        doc: Host is the host to connect to
        tag: env:"HOST,notEmpty" envDefault:"localhost"
        type_ref: {name: string, kind: Ident}
      - names: [User]
        doc: User is the user to connect as
        tag: env:"USER"
        type_ref: {name: string, kind: Ident}
      - names: [Password]
        doc: Password is the password to use
        tag: env:"PASSWORD"
        type_ref: {name: string, kind: Ident}
      - names: [DisableTLS]
        doc: DisableTLS is the flag to disable TLS
        tag: env:"DISABLE_TLS"
        type_ref: {name: bool, kind: Ident}
    - name: ServerConfig
      export: false
      doc: ServerConfig is the server settings.
      fields:
      - names: [Port]
        doc: Port is the port to listen on
        tag: env:"PORT,required"
        type_ref: {name: Int, kind: Ident}
      - names: [Host]
        doc: Host is the host to listen on
        tag: env:"HOST,notEmpty" envDefault:"localhost"
        type_ref: {name: string, kind: Ident}
      - names: [Timeout]
        doc: Timeout is the timeout settings
        tag: envPrefix:"TIMEOUT_"
        type_ref: {name: TimeoutConfig, kind: Ident}
    - name: TimeoutConfig
      export: false
      doc: TimeoutConfig is the timeout settings.
      fields:
      - names: [Read]
        doc: Read is the read timeout
        tag: env:"READ" envDefault:"30"
        type_ref: {name: Int, kind: Ident}
      - names: [Write]
        doc: Write is the write timeout
        tag: env:"WRITE" envDefault:"30"
        type_ref: {name: Int, kind: Ident}

